name: build-packages
on:
  push:
    branches: ["**"]
    tags: ["v*", "*"]   # build when you push a tag like v1.0.0
  workflow_dispatch:

jobs:
  rpm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: { fedora: [40, 41, 42] }
    container: fedora:${{ matrix.fedora }}
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 0}
      - name: Derive versions
        run: |
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV          # v1.0.0
            echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV    # 1.0.0
      - name: Install deps
        run: dnf -y install rpm-build rpmdevtools gcc-c++ cmake ninja-build pkgconfig libusb1-devel git
      - name: Build RPM (workspace topdir)
        run: |
            echo "%_topdir $PWD/rpmbuild" > ~/.rpmmacros
            rpmdev-setuptree
            cp rpm/sigma-driver.spec rpmbuild/SPECS/
            spectool -g -R rpmbuild/SPECS/sigma-driver.spec --define "tag ${TAG}" --define "version ${VERSION}"
            rpmbuild -ba rpmbuild/SPECS/sigma-driver.spec --define "tag ${TAG}" --define "version ${VERSION}"

      - name: Upload RPMs
        uses: actions/upload-artifact@v4
        with:
          name: rpm-${{ env.VERSION }}-fc${{ matrix.fedora }}
          path: |
            rpmbuild/RPMS/**/*.rpm
            rpmbuild/SRPMS/*.src.rpm
          if-no-files-found: warn
          overwrite: true

  deb:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        series: [jammy, noble]   # 22.04, 24.04
        include:
          - series: jammy
            image: ubuntu:22.04
          - series: noble
            image: ubuntu:24.04
    container: ${{ matrix.image }}
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 0}
      - name: Derive versions
        run: |
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV          # v1.0.0
            echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV    # 1.0.0
      - name: Install deps
        run: |
          apt-get update
          apt-get install -y build-essential debhelper cmake pkg-config libusb-1.0-0-dev ninja-build dpkg-dev devscripts
      - name: Update changelog version and build package.
        run: |
          DEB_VERSION="${VERSION}-1"
          if [ -f debian/changelog ]; then
            dch --newversion "$DEB_VERSION" --distribution ${{ matrix.series }} "Release $VERSION"
          else
            dch --create --package sigma-driver --newversion "$DEB_VERSION" \
                --distribution ${{ matrix.series }} "Release $VERSION"
          fi
          dpkg-buildpackage -us -uc -b
      - name: Collect debs
        run: |
            mkdir -p dist
            for f in ../*.deb ../*.changes ../*.buildinfo; do
                [ -e "$f" ] || continue
                mv -v "$f" dist/
            done
      - name: Upload DEB artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deb-${{ env.VERSION }}-${{ matrix.series }}
          path: dist/*.deb
          if-no-files-found: warn
          overwrite: true
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [rpm, deb]
    runs-on: ubuntu-latest
    permissions: { contents: write }
    steps:
      - uses: actions/download-artifact@v4
        with: {path: dist}
      - uses: softprops/action-gh-release@v2
        with: { files: dist/**/* }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}